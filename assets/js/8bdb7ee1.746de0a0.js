"use strict";(self.webpackChunkluna_website=self.webpackChunkluna_website||[]).push([[441],{8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>c});var s=r(6540);const t={},i=s.createContext(t);function d(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(i.Provider,{value:n},e.children)}},9729:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>a,frontMatter:()=>d,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"reference/std/crypto","title":"std:crypto","description":"The std:crypto module provides functions for hashing, HMAC, UUID generation, and cryptographically secure random bytes. It is useful for security, authentication, and unique identifier generation.","source":"@site/docs/reference/std/crypto.md","sourceDirName":"reference/std","slug":"/reference/std/crypto","permalink":"/luna/docs/reference/std/crypto","draft":false,"unlisted":false,"editUrl":"https://github.com/wux4an/luna/tree/main/docs/docs/reference/std/crypto.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"std:base64","permalink":"/luna/docs/reference/std/base64"},"next":{"title":"std:env","permalink":"/luna/docs/reference/std/env"}}');var t=r(4848),i=r(8453);const d={},c="std",l={},h=[{value:"Functions",id:"functions",level:2},{value:"<code>crypto.hash(algorithm: string, data: string): string</code>",id:"cryptohashalgorithm-string-data-string-string",level:3},{value:"<code>crypto.hmac(algorithm: string, key: string, data: string): string</code>",id:"cryptohmacalgorithm-string-key-string-data-string-string",level:3},{value:"<code>crypto.random_bytes(n: number): string</code>",id:"cryptorandom_bytesn-number-string",level:3},{value:"<code>crypto.uuid(): string</code>",id:"cryptouuid-string",level:3},{value:"Supported Algorithms",id:"supported-algorithms",level:2}];function o(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsxs)(n.h1,{id:"std",children:["std",":crypto"]})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"std:crypto"})," module provides functions for ",(0,t.jsx)(n.strong,{children:"hashing, HMAC, UUID generation, and cryptographically secure random bytes"}),". It is useful for security, authentication, and unique identifier generation."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(n.h3,{id:"cryptohashalgorithm-string-data-string-string",children:(0,t.jsx)(n.code,{children:"crypto.hash(algorithm: string, data: string): string"})}),"\n",(0,t.jsxs)(n.p,{children:["Computes the hash of ",(0,t.jsx)(n.code,{children:"data"})," using the specified ",(0,t.jsx)(n.code,{children:"algorithm"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"algorithm"})," ",(0,t.jsx)(n.em,{children:"(string)"}),": Hash algorithm (",(0,t.jsx)(n.code,{children:'"md5"'}),", ",(0,t.jsx)(n.code,{children:'"sha1"'}),", ",(0,t.jsx)(n.code,{children:'"sha256"'}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"})," ",(0,t.jsx)(n.em,{children:"(string)"}),": The input string to hash"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"(string)"})," Hexadecimal representation of the hash"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local crypto = require("std:crypto")\nprint(crypto.hash("sha256", "hello world"))\n-- "b94d27b9934d3e08a52e52d7da7dabfac484efe3..."\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"cryptohmacalgorithm-string-key-string-data-string-string",children:(0,t.jsx)(n.code,{children:"crypto.hmac(algorithm: string, key: string, data: string): string"})}),"\n",(0,t.jsxs)(n.p,{children:["Generates a ",(0,t.jsx)(n.strong,{children:"HMAC"})," for ",(0,t.jsx)(n.code,{children:"data"})," using ",(0,t.jsx)(n.code,{children:"key"})," and the specified ",(0,t.jsx)(n.code,{children:"algorithm"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"algorithm"})," ",(0,t.jsx)(n.em,{children:"(string)"}),": HMAC algorithm (",(0,t.jsx)(n.code,{children:'"sha1"'}),", ",(0,t.jsx)(n.code,{children:'"sha256"'}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"key"})," ",(0,t.jsx)(n.em,{children:"(string)"}),": Secret key for HMAC"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"data"})," ",(0,t.jsx)(n.em,{children:"(string)"}),": Input string to sign"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"(string)"})," Hexadecimal representation of the HMAC"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local crypto = require("std:crypto")\nprint(crypto.hmac("sha1", "secret", "message"))\n-- "0caf649feee4953d87bf903ac1176c45e028df16"\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"cryptorandom_bytesn-number-string",children:(0,t.jsx)(n.code,{children:"crypto.random_bytes(n: number): string"})}),"\n",(0,t.jsxs)(n.p,{children:["Generates ",(0,t.jsx)(n.code,{children:"n"})," cryptographically secure random bytes."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"n"})," ",(0,t.jsx)(n.em,{children:"(number)"}),": Number of bytes to generate"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"(string)"})," Random bytes as a binary string"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local crypto = require("std:crypto")\nlocal rb = crypto.random_bytes(16)\nprint(rb)\n-- (hex example) "\\x7f\\x3a\\x9d\\x2c\\x4b\\x12\\x88\\xef\\x90\\xab\\xcd\\x34\\x56\\x78\\x9a\\xbc"\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"cryptouuid-string",children:(0,t.jsx)(n.code,{children:"crypto.uuid(): string"})}),"\n",(0,t.jsxs)(n.p,{children:["Generates a ",(0,t.jsx)(n.strong,{children:"UUID v4"})," string."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"(string)"})," UUID in standard string format"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-lua",children:'local crypto = require("std:crypto")\nprint(crypto.uuid())\n-- "b0d8fa96-fc6b-43b2-bb02-55cfeaeb81d7"\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"supported-algorithms",children:"Supported Algorithms"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Algorithm"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Output Length"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"md5"})}),(0,t.jsx)(n.td,{children:"Message-Digest Algorithm 5"}),(0,t.jsx)(n.td,{children:"16 bytes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"sha1"})}),(0,t.jsx)(n.td,{children:"Secure Hash Algorithm 1"}),(0,t.jsx)(n.td,{children:"20 bytes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"sha256"})}),(0,t.jsx)(n.td,{children:"Secure Hash Algorithm 2 (256-bit)"}),(0,t.jsx)(n.td,{children:"32 bytes"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Notes:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["All outputs are in ",(0,t.jsx)(n.strong,{children:"hexadecimal format"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"md5"})," is fast but ",(0,t.jsx)(n.strong,{children:"not recommended for cryptographic security"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"sha1"})," is more secure than ",(0,t.jsx)(n.code,{children:"md5"})," but considered ",(0,t.jsx)(n.strong,{children:"weak for new systems"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"sha256"})," is the recommended default for most ",(0,t.jsx)(n.strong,{children:"secure hashing needs"}),"."]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}}}]);