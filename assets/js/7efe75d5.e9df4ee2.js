"use strict";(self.webpackChunkluna_website=self.webpackChunkluna_website||[]).push([[465],{5281:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"reference/std/http","title":"std:http","description":"The std:http module provides a simple interface to perform HTTP requests in Lua.","source":"@site/../docs/reference/std/http.md","sourceDirName":"reference/std","slug":"/reference/std/http","permalink":"/luna/docs/reference/std/http","draft":false,"unlisted":false,"editUrl":"https://github.com/wux4an/luna/tree/main/docs/../docs/reference/std/http.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"std:env","permalink":"/luna/docs/reference/std/env"},"next":{"title":"Standard Library","permalink":"/luna/docs/reference/std/"}}');var r=s(4848),i=s(8453);const l={},d="std",o={},c=[{value:"Functions",id:"functions",level:2},{value:"<code>http.request(method: string, url: string, opts: table?): table?</code>",id:"httprequestmethod-string-url-string-opts-table-table",level:3},{value:"Examples",id:"examples",level:2},{value:"GET Request",id:"get-request",level:3},{value:"POST Request (Form URL-encoded)",id:"post-request-form-url-encoded",level:3},{value:"POST Request (JSON)",id:"post-request-json",level:3},{value:"Notes",id:"notes",level:2}];function h(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsxs)(n.h1,{id:"std",children:["std",":http"]})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"std:http"})," module provides a simple interface to perform HTTP requests in Lua.\nIt supports common HTTP methods (",(0,r.jsx)(n.code,{children:"GET"}),", ",(0,r.jsx)(n.code,{children:"POST"}),", etc.), headers, query parameters, optional timeout, and sending request bodies (JSON or form-urlencoded)."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,r.jsx)(n.h3,{id:"httprequestmethod-string-url-string-opts-table-table",children:(0,r.jsx)(n.code,{children:"http.request(method: string, url: string, opts: table?): table?"})}),"\n",(0,r.jsx)(n.p,{children:"Performs an HTTP request."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"method"})," ",(0,r.jsx)(n.em,{children:"(string)"}),": HTTP method (",(0,r.jsx)(n.code,{children:'"GET"'}),", ",(0,r.jsx)(n.code,{children:'"POST"'}),", etc.)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"url"})," ",(0,r.jsx)(n.em,{children:"(string)"}),": the full URL to request."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"opts"})," ",(0,r.jsx)(n.em,{children:"(table?)"}),": optional table with fields:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"headers"})," ",(0,r.jsx)(n.em,{children:"(table)"}),": key-value table of HTTP headers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"query"})," ",(0,r.jsx)(n.em,{children:"(table)"}),": key-value table of query parameters."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"timeout"})," ",(0,r.jsx)(n.em,{children:"(number)"}),": request timeout in milliseconds."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"body"})," ",(0,r.jsx)(n.em,{children:"(string)"}),": request body (for POST/PUT requests)."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"table?"})," with the response:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"status"})," \u2014 HTTP status code."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"body"})," \u2014 response body as a string."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Returns ",(0,r.jsx)(n.code,{children:"nil"})," and an error message if the request fails."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.h3,{id:"get-request",children:"GET Request"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local http = require("std:http")\n\nlocal res = http.request("GET", "https://ifconfig.me", {\n    headers = { Accept = "application/json" },\n    query = { q = "lua" },\n    timeout = 5000,\n})\n\nif res then\n    print("=== Response Body ===")\n    print(res.body)      -- Prints the response body\n    print("Status:", res.status)\nelse\n    print("Request failed")  -- Prints if request could not be completed\nend\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"post-request-form-url-encoded",children:"POST Request (Form URL-encoded)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local http = require("std:http")\n\nlocal res = http.request("POST", "https://httpbin.org/post", {\n    headers = { ["Content-Type"] = "application/x-www-form-urlencoded" },\n    body = "foo=bar&baz=42",  -- Form data\n})\n\nif res then\n    print("=== Response Body ===")\n    print(res.body)      -- Should show "form": {"foo":"bar","baz":"42"} in JSON\n    print("Status:", res.status)\nelse\n    print("Request failed")\nend\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"post-request-json",children:"POST Request (JSON)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local http = require("std:http")\n\nlocal res = http.request("POST", "https://httpbin.org/post", {\n    headers = { ["Content-Type"] = "application/json" },\n    body = \'{"foo":"bar","baz":42}\',\n})\n\nif res then\n    print("=== Response Body ===")\n    print(res.body)      -- Should show "json": {"foo":"bar","baz":42} in JSON\n    print("Status:", res.status)\nelse\n    print("Request failed")\nend\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.code,{children:"query"})," table to append query parameters to the URL automatically."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"timeout"})," option prevents hanging requests."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Headers are optional but recommended when requesting JSON or APIs that require authentication."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"For POST/PUT requests:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:'"Content-Type": "application/x-www-form-urlencoded"'})," for form submissions."]}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:'"Content-Type": "application/json"'})," for JSON payloads."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Sending a ",(0,r.jsx)(n.code,{children:"body"})," is optional; omit it for GET requests."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var t=s(6540);const r={},i=t.createContext(r);function l(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);