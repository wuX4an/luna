"use strict";(self.webpackChunkluna_website=self.webpackChunkluna_website||[]).push([[132],{5833:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"reference/config/index","title":"Luna.toml Configuration Reference","description":"This page describes the configuration file used by Luna projects (Luna.toml), including sections, fields, and examples.","source":"@site/docs/reference/config/index.md","sourceDirName":"reference/config","slug":"/reference/config/","permalink":"/luna/docs/reference/config/","draft":false,"unlisted":false,"editUrl":"https://github.com/wux4an/luna/tree/main/docs/docs/reference/config/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CLI Commands Reference","permalink":"/luna/docs/reference/cli/"},"next":{"title":"reference/lua/index","permalink":"/luna/docs/reference/lua/"}}');var r=s(4848),c=s(8453);const t={},l="Luna.toml Configuration Reference",d={},a=[{value:"[package]",id:"package",level:2},{value:"[build]",id:"build",level:2},{value:"[tasks]",id:"tasks",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"lunatoml-configuration-reference",children:"Luna.toml Configuration Reference"})}),"\n",(0,r.jsxs)(n.p,{children:["This page describes the configuration file used by Luna projects (",(0,r.jsx)(n.code,{children:"Luna.toml"}),"), including sections, fields, and examples."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"package",children:"[package]"}),"\n",(0,r.jsx)(n.p,{children:"Defines basic metadata for the project."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[package]\nname = "app"\nversion = "0.1.0"\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Fields:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," \u2014 the project name (string, required)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"version"})," \u2014 the project version (string, optional, default ",(0,r.jsx)(n.code,{children:'"0.1.0"'}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"build",children:"[build]"}),"\n",(0,r.jsx)(n.p,{children:"Specifies how to build the project into a self-contained executable."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[build]\nsource = "src/"\nentry = "main.lua"\ntarget = "linux/amd64"\noutput = "dist"\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Fields:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"source"})," \u2014 directory containing Lua source files"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"entry"})," \u2014 main Lua script to execute (string, required)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"target"})," \u2014 build target platform (",(0,r.jsx)(n.code,{children:"linux/amd64"}),", ",(0,r.jsx)(n.code,{children:"darwin/amd64"}),", etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"output"})," \u2014 directory or file name for the compiled binary"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"tasks",children:"[tasks]"}),"\n",(0,r.jsx)(n.p,{children:"Defines reusable tasks (scripts) for the project, including optional dependencies."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[tasks]\nsource = "tasks/"\n\n[tasks.clean]\nscript = "clean.lua"\ndesc = "Clean generated files"\n\n[tasks.build]\nscript = "build.lua"\ndesc = "Compile the project"\ndepends = ["clean"]\n\n[tasks.run]\nscript = "run.lua"\ndesc = "Run the project"\ndepends = ["build"]\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Fields:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"source"})," \u2014 directory containing task scripts"]}),"\n",(0,r.jsxs)(n.li,{children:["Each task (e.g., ",(0,r.jsx)(n.code,{children:"[tasks.build]"}),") can define:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"script"})," \u2014 the Lua file to run for the task"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"desc"})," \u2014 a short description (optional)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"depends"})," \u2014 list of other tasks to run first (optional)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'luna task             # list all tasks\nluna task build       # run the "build" task and its dependencies\nluna task run         # run the "run" task (will execute "build" first)\n'})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var i=s(6540);const r={},c=i.createContext(r);function t(e){const n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);